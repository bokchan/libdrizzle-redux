#
# Uncrustify Configuration File
# File Created With UncrustifyX 0.4.3 (252)
#

# Alignment
# ---------

## Alignment

# Align on tabstop
align_on_tabstop                        = false         # boolean (false/true)

# Align with tabs
align_with_tabs                         = false         # boolean (false/true)

## Alignment Span

# Alignment span for #define bodies
align_pp_define_span                    = 8             # number

# Alignment span for ObjC message colons
align_oc_msg_colon_span                 = 1             # number

# Alignment span for ObjC message spec
align_oc_msg_spec_span                  = 0             # number

# Alignment span for equals in enums
align_enum_equ_span                     = 4             # number

# Alignment span for struct initializer values
align_struct_init_span                  = 4             # number

# Alignment span for trailing comments
align_right_cmt_span                    = 8             # number

## Gap

# Minimum gap for trailing comment
align_right_cmt_gap                     = 8             # number

# Blank Lines
# -----------

## Newline Count After

# Newline count after variable definition block
nl_func_var_def_blk                     = 1             # number

# Code-Modifying
# --------------

## Braces

# Braces around statments that span N newlines
mod_full_brace_nl                       = 3             # number

# Braces on single-line do statement
mod_full_brace_do                       = add           # string (add/force/ignore/remove)

# Braces on single-line else statement
mod_full_brace_if                       = add           # string (add/force/ignore/remove)

# Braces on single-line for statement
mod_full_brace_for                      = add           # string (add/force/ignore/remove)

# Braces on single-line while statement
mod_full_brace_while                    = add           # string (add/force/ignore/remove)

## Comments

# Add comment after function of size
mod_add_long_function_closebrace_comment = 20           # number

# Add comment after ifdef/else statement of size
mod_add_long_ifdef_else_comment         = 20            # number

# Add comment after ifdef/endif statement of size
mod_add_long_ifdef_endif_comment        = 20            # number

# Add comment after switch statement of size
mod_add_long_switch_closebrace_comment  = 20            # number

## Parentheses

# Remove unnecessary parentheses on return statement
mod_paren_on_return                     = ignore        # string (add/force/ignore/remove)

## Semicolons

# Whether to remove superfluous semicolons
mod_remove_extra_semicolon              = true          # boolean (false/true)

# Comments
# --------

## Other

# Stars on multi-line comments
cmt_star_cont                           = true          # boolean (false/true)

# Set the comment reflow mode
cmt_reflow_mode                         = 2             # number (0/1/2)


# Try to wrap comments at cmt_width columns
cmt_width                               = 80            # number

# General
# -------

# The original size of tabs in the input
input_tab_size                          = 2             # number

## Other

# Output tab size
output_tab_size                         = 4             # number

# Indentation
# -----------

## Indentation Size

# Indentation column size
indent_columns                          = 4             # number

# Indentation size between case and switch
indent_switch_case                      = 4             # number

## Other

# Align continued statements at equals
indent_align_assign                     = false         # boolean (false/true)

# Whether to indent strings broken by '\' so that they line up
indent_align_string                     = true          # boolean (false/true)

# Indent goto labels
indent_label                            = 2             # number

# Indent with tabs
indent_with_tabs                        = 0             # number


# Line-splitting
# --------------

## Other

# Whether to split lines as close to code_width as possible and ignore some groupings
ls_code_width                           = false          # boolean (false/true)

## Splitting

# Try to limit code width to N number of columns
code_width                              = 80            # number

# Whether to fully split long function protos/calls at commas
ls_func_split_full                      = false         # boolean (false/true)

# Newlines
# --------

## Newline After

# Whether to put a newline after 'case' statement
nl_after_case                           = true          # boolean (false/true)

## Newline Before

# Whether to put a newline before 'case' statement
nl_before_case                          = false         # boolean (false/true)

# Whether to put a newline before 'return' statement
nl_before_return                        = false         # boolean (false/true)

## Newline Between

# Newline between close brace and else
nl_brace_else                           = add           # string (add/force/ignore/remove)

# Newline between close brace and while
nl_brace_while                          = add           # string (add/force/ignore/remove)

# Newline between do and open brace
nl_do_brace                             = add           # string (add/force/ignore/remove)

# Newline between else and open brace
nl_else_brace                           = add           # string (add/force/ignore/remove)

# Newline between enum and open brace
nl_enum_brace                           = add           # string (add/force/ignore/remove)

# Newline between for and open brace
nl_for_brace                            = add           # string (add/force/ignore/remove)

# Newline between function call and open brace
nl_fcall_brace                          = add           # string (add/force/ignore/remove)

# Newline between function signature and open brace
nl_fdef_brace                           = add           # string (add/force/ignore/remove)

# Newline between if and open brace
nl_if_brace                             = add           # string (add/force/ignore/remove)

# Newline between struct and open brace
nl_struct_brace                         = add           # string (add/force/ignore/remove)

# Newline between switch and open brace
nl_switch_brace                         = add           # string (add/force/ignore/remove)

# Newline between union and open brace
nl_union_brace                          = add           # string (add/force/ignore/remove)

# Newline between while and open brace
nl_while_brace                          = add           # string (add/force/ignore/remove)

# Spacing
# -------

## Space After

# Space after C++ comment opening
sp_cmt_cpp_start                        = add           # string (add/force/ignore/remove)

# Space after ObjC block caret
sp_after_oc_block_caret                 = remove        # string (add/force/ignore/remove)

# Space after ObjC colon
sp_after_oc_colon                       = remove        # string (add/force/ignore/remove)

# Space after ObjC message colon
sp_after_send_oc_colon                  = remove        # string (add/force/ignore/remove)

# Space after ObjC return type
sp_after_oc_return_type                 = force         # string (add/force/ignore/remove)

# Space after ObjC scope
sp_after_oc_scope                       = force         # string (add/force/ignore/remove)

# Space after ObjC type
sp_after_oc_type                        = remove        # string (add/force/ignore/remove)

# Add or remove space after the '&' (address-of) operator.
sp_addr                                 = remove        # string (add/force/ignore/remove)

# Add or remove space after assignment operator '=', '+=', etc. Overrides sp_assign.
sp_after_assign                         = add           # string (add/force/ignore/remove)


# Space after cast
sp_after_cast                           = add           # string (add/force/ignore/remove)

# Space after class colon
sp_after_class_colon                    = force         # string (add/force/ignore/remove)

# Space after comma
sp_after_comma                          = add           # string (add/force/ignore/remove)

# Add or remove space after the '*' (dereference) operator.
sp_deref                                = remove        # string (add/force/ignore/remove)

# Space after condition close parenthesis
sp_after_sparen                         = force         # string (add/force/ignore/remove)

# Space after pointer star
sp_after_ptr_star                       = remove        # string (add/force/ignore/remove)

# Space after pointer star followed by function
sp_after_ptr_star_func                  = remove         # string (add/force/ignore/remove)

# Add or remove space after reference sign '&', if followed by a word.
sp_after_byref                          = remove

## Space Around

# Space around arithmetic operators
sp_arith                                = add           # string (add/force/ignore/remove)

# Space around assignment operator
sp_assign                               = add           # string (add/force/ignore/remove)

# Space around boolean operators
sp_bool                                 = add           # string (add/force/ignore/remove)

# Space around compare operators
sp_compare                              = add           # string (add/force/ignore/remove)

# Space around ternary condition colon
sp_cond_colon                           = force         # string (add/force/ignore/remove)

# Space around ternary condition question mark
sp_cond_question                        = force         # string (add/force/ignore/remove)

## Space Before

# Space before ObjC block caret
sp_before_oc_block_caret                = ignore        # string (add/force/ignore/remove)

# Space before ObjC colon
sp_before_oc_colon                      = remove        # string (add/force/ignore/remove)

# Space before ObjC message colon
sp_before_send_oc_colon                 = remove        # string (add/force/ignore/remove)

# Space before case colon
sp_before_case_colon                    = remove        # string (add/force/ignore/remove)

# Space before class colon
sp_before_class_colon                   = force         # string (add/force/ignore/remove)

# Space before if/for/switch/while open parenthesis
sp_before_sparen                        = force         # string (add/force/ignore/remove)

# Space before pointer star
sp_before_ptr_star                      = force         # string (add/force/ignore/remove)

# Space before pointer star followed by function
sp_before_ptr_star_func                 = force         # string (add/force/ignore/remove)

# Space before unnamed pointer star
sp_before_unnamed_ptr_star              = ignore        # string (add/force/ignore/remove)

## Space Between

# Space between @selector and open parenthesis
sp_after_oc_at_sel                      = remove        # string (add/force/ignore/remove)

# Space between close brace and else
sp_brace_else                           = force         # string (add/force/ignore/remove)

# Space between close parenthesis and open brace
sp_paren_brace                          = force         # string (add/force/ignore/remove)

# Space between else and open brace
sp_else_brace                           = force         # string (add/force/ignore/remove)

# Space between function name and open parenthesis
sp_func_call_paren                      = remove        # string (add/force/ignore/remove)

# Space between function name and open parenthesis in declaration
sp_func_proto_paren                     = remove        # string (add/force/ignore/remove)

# Space between function name and open parenthesis in function definition
sp_func_def_paren                       = remove        # string (add/force/ignore/remove)

# Space between pointer stars
sp_between_ptr_star                     = remove        # string (add/force/ignore/remove)

# Space between return and open parenthesis
sp_return_paren                         = add           # string (add/force/ignore/remove)

# Space between sizeof and open parenthesis
sp_sizeof_paren                         = remove        # string (add/force/ignore/remove)

## Space Inside

# Space inside braces
sp_inside_braces                        = add           # string (add/force/ignore/remove)

# Space inside enum braces
sp_inside_braces_enum                   = add           # string (add/force/ignore/remove)

# Space inside function parentheses
sp_inside_fparen                        = remove        # string (add/force/ignore/remove)

# Space inside struct/union braces
sp_inside_braces_struct                 = add           # string (add/force/ignore/remove)
